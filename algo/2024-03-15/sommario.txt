Abbiamo scritto insieme del codice ricorsivo per la stampa delle piastrellature di un bagno 1xn.
Esempio per n=3:
          [][][]
          [--][]
          [][--]
          
La stampa avveniva nei casi base (foglie dell'albero) cui però non bastava la conoscenza della dimensione residua (n=0 oppure n=1 in ogni foglia) ma serviva anche la conoscenza della propria storia.
Per questo abbiamo ideato il seguente contratto:

def stampaPiastrellature(n, history=""):
"""stampa le piastrellature di un bagno 1xn, ciascuna prefissata dalla sua history"""


Abbiamo affrontanto il problema di contare le piastrellature per un bagno 2xn.
Lo abbiamo risolto in due modi diversi:
    2. allargando la famiglia di problemi che vogliamo risolvere in modo da ottenere chiusura rispetto alle operazioni elementari che abbiamo infine impiegato per ottenere problemi più piccoli. Abbiamo considerato 3 famiglie di problemi (api, vespe e bombi):
        
        f(n) = numero di piastrellature per un bagno 2xn
        g(n) = numero di piastrellature per un bagno 2xn cui è stata rimossa una cella d'angolo
        h(n) = numero di piastrellature per un bagno 2xn cui è stata rimossa una cella d'angolo e quella al suo fianco
        
Trovate i codici sviluppati insieme al repo coi materiali del corso:
        git@github.com:romeorizzi/corsi_shells.git
Allo stesso repo trovate anche il presente sommario, originalmente sviluppato alla pagina etherpad https://etherpad.wikimedia.org/p/Algoritmi2024-03-15
